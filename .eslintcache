[{"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\index.js":"1","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\App.js":"2","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\context\\ExpenseReducer\\ExpenceState.js":"3","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\styles.js":"4","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\context\\ExpenseReducer\\expenseContext.js":"5","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\context\\type.js":"6","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\context\\ExpenseReducer\\expenseReducer.js":"7","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Details\\Details.jsx":"8","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Main\\Main.jsx":"9","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Details\\styles.js":"10","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\useTransactions.js":"11","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Main\\styles.js":"12","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Main\\Form\\Form.jsx":"13","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\InfoCard.jsx":"14","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Main\\List\\List.jsx":"15","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\constants\\categories.js":"16","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Main\\List\\styles.js":"17","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\utisl\\formatDate.js":"18","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Main\\Form\\styles.js":"19","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Snackbar\\Snackbar.jsx":"20","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Snackbar\\styles.js":"21"},{"size":469,"mtime":1609187408000,"results":"22","hashOfConfig":"23"},{"size":1598,"mtime":1611495439373,"results":"24","hashOfConfig":"23"},{"size":990,"mtime":1611493514329,"results":"25","hashOfConfig":"23"},{"size":582,"mtime":1609187408000,"results":"26","hashOfConfig":"23"},{"size":87,"mtime":1609187408000,"results":"27","hashOfConfig":"23"},{"size":106,"mtime":1609187408000,"results":"28","hashOfConfig":"23"},{"size":634,"mtime":1609187408000,"results":"29","hashOfConfig":"23"},{"size":668,"mtime":1609187408000,"results":"30","hashOfConfig":"23"},{"size":1273,"mtime":1611491762109,"results":"31","hashOfConfig":"23"},{"size":247,"mtime":1609187408000,"results":"32","hashOfConfig":"23"},{"size":1149,"mtime":1609187408000,"results":"33","hashOfConfig":"23"},{"size":514,"mtime":1609187408000,"results":"34","hashOfConfig":"23"},{"size":5318,"mtime":1611494678789,"results":"35","hashOfConfig":"23"},{"size":436,"mtime":1611494872474,"results":"36","hashOfConfig":"23"},{"size":1709,"mtime":1609187408000,"results":"37","hashOfConfig":"23"},{"size":1710,"mtime":1609187408000,"results":"38","hashOfConfig":"23"},{"size":416,"mtime":1609187408000,"results":"39","hashOfConfig":"23"},{"size":333,"mtime":1609187408000,"results":"40","hashOfConfig":"23"},{"size":247,"mtime":1609187408000,"results":"41","hashOfConfig":"23"},{"size":852,"mtime":1611491977157,"results":"42","hashOfConfig":"23"},{"size":206,"mtime":1609187408000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1kc1eaj",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\index.js",[],["89","90"],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\App.js",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\context\\ExpenseReducer\\ExpenceState.js",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\styles.js",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\context\\ExpenseReducer\\expenseContext.js",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\context\\type.js",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\context\\ExpenseReducer\\expenseReducer.js",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Details\\Details.jsx",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Main\\Main.jsx",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Details\\styles.js",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\useTransactions.js",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Main\\styles.js",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Main\\Form\\Form.jsx",["91"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\n\r\nimport Snackbar from \"../../Snackbar/Snackbar\";\r\nimport useStyles from \"./styles\";\r\nimport formatDate from \"../../../utisl/formatDate\";\r\nimport { ExpenseContext } from \"../../context/ExpenseReducer/expenseContext\";\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n} from \"../../../constants/categories\";\r\n\r\n// import { fb } from \"../../../firebase\";\r\n// import firebase from \"firebase/app\";\r\n\r\nconst initialState = {\r\n  amount: \"\",\r\n  category: \"\",\r\n  type: \"Income\",\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nexport default function Form() {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\"))\r\n      return;\r\n    addTransaction({\r\n      ...formData,\r\n      amount: Number(formData.amount),\r\n      id: uuidv4(),\r\n    });\r\n    setOpen(true);\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === \"add_expense\") {\r\n        setFormData({ ...formData, type: \"Expense\" });\r\n      } else if (segment.intent.intent === \"add_income\") {\r\n        setFormData({ ...formData, type: \"Income\" });\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"create_transaction\"\r\n      ) {\r\n        return createTransaction();\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"cancel_transaction\"\r\n      ) {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value\r\n          .slice(1)\r\n          .toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case \"amount\":\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case \"category\":\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: \"Income\", category });\r\n            } else if (\r\n              expenseCategories.map((iC) => iC.type).includes(category)\r\n            ) {\r\n              setFormData({ ...formData, type: \"Expense\", category });\r\n            }\r\n            break;\r\n          case \"date\":\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      if (\r\n        segment.isFinal &&\r\n        formData.amount &&\r\n        formData.category &&\r\n        formData.date &&\r\n        formData.type\r\n      ) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories =\r\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment ? (\r\n            <div className=\"segment\">\r\n              {segment.words.map((w) => w.value).join(\" \")}\r\n            </div>\r\n          ) : null}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select\r\n            value={formData.type}\r\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\r\n          >\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            value={formData.category}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, category: e.target.value })\r\n            }\r\n          >\r\n            {selectedCategories.map((c) => (\r\n              <MenuItem key={c.type} value={c.type}>\r\n                {c.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          type=\"number\"\r\n          label=\"Amount\"\r\n          value={formData.amount}\r\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Date\"\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, date: formatDate(e.target.value) })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid>\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          onClick={createTransaction}\r\n        >\r\n          Create\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\InfoCard.jsx",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Main\\List\\List.jsx",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\constants\\categories.js",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Main\\List\\styles.js",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\utisl\\formatDate.js",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Snackbar\\Snackbar.jsx",[],"C:\\Users\\xiaom\\Desktop\\GitHub\\speechly_expense_tracker\\src\\components\\Snackbar\\styles.js",[],["92","93"],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":107,"column":6,"nodeType":"100","endLine":107,"endColumn":15,"suggestions":"101"},{"ruleId":"94","replacedBy":"102"},{"ruleId":"96","replacedBy":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["106"],["104"],["105"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"109","text":"110"},[3038,3047],"[createTransaction, formData, segment]"]